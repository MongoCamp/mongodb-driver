import{_ as s,c as i,o as e,a2 as t}from"./chunks/framework.B4IoZSds.js";const c=JSON.parse('{"title":"Database","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/database/index.md","filePath":"documentation/database/index.md","lastUpdated":1758723910000}'),n={name:"documentation/database/index.md"};function l(p,a,r,o,h,d){return e(),i("div",null,[...a[0]||(a[0]=[t(`<h1 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-label="Permalink to &quot;Database&quot;">​</a></h1><p>Database Connection can be done using MongConfig.</p><p>DatabaseProvider Instance contains setup for registries and databases.</p><p>Database provider will ues database by name from MongoConfig by default. Multiple databases access is supported on the same client is supported. For different MongoDBs you have to use different providers.</p><h2 id="databaseprovider" tabindex="-1">DatabaseProvider <a class="header-anchor" href="#databaseprovider" aria-label="Permalink to &quot;DatabaseProvider&quot;">​</a></h2><p>DatabaseProvider is the central repository for MongoClient, registries, databases and collections.</p><p>Every <a href="./../mongo-dao/">Mongo DAO</a> / <a href="./../gridfs-dao/">GridFs DAO</a> Instance needs this class.</p><div class="language-scala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> provider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MongoConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.fromPath())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> database</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MongoDatabase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> provider.database()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Infos for all collections in the default database</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> collectionInfos</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CollectionInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> provider.collectionInfos()</span></span></code></pre></div>`,8)])])}const g=s(n,[["render",l]]);export{c as __pageData,g as default};
