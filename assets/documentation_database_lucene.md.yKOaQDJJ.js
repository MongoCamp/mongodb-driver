import{_ as e,c as s,o as i,a2 as t}from"./chunks/framework.B4IoZSds.js";const k=JSON.parse('{"title":"Lucene Query","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/database/lucene.md","filePath":"documentation/database/lucene.md","lastUpdated":1758723910000}'),n={name:"documentation/database/lucene.md"};function r(l,a,h,o,p,c){return i(),s("div",null,[...a[0]||(a[0]=[t('<h1 id="lucene-query" tabindex="-1">Lucene Query <a class="header-anchor" href="#lucene-query" aria-label="Permalink to &quot;Lucene Query&quot;">​</a></h1><p>MongoCamp Mongo Driver support the usage of <a href="https://lucene.apache.org/" target="_blank" rel="noreferrer">Lucene Query</a> to search in the MongoDb.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="explicit-usage" tabindex="-1">Explicit Usage <a class="header-anchor" href="#explicit-usage" aria-label="Permalink to &quot;Explicit Usage&quot;">​</a></h3><p>The LuceneConverter has the methods to parse a String to and <code>Query</code> and a other to the document conversion.</p><div class="language-scala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> search</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PersonDAO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.find(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LuceneQueryConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.toDocument(luceneQuery), sortByBalance).resultList()</span></span></code></pre></div><h3 id="implicit-usage" tabindex="-1">Implicit Usage <a class="header-anchor" href="#implicit-usage" aria-label="Permalink to &quot;Implicit Usage&quot;">​</a></h3><p>Like the Map to Bson conversion there is also an implicit method to convert <code>Query</code> to find Bson.</p><div class="language-scala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> search</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PersonDAO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.find(luceneQuery, sortByBalance).resultList()</span></span></code></pre></div><h3 id="parse-string-to-query" tabindex="-1">Parse String to Query <a class="header-anchor" href="#parse-string-to-query" aria-label="Permalink to &quot;Parse String to Query&quot;">​</a></h3><p>We have an individual parser to parse an string to Lucene Query, because the default Lucene Analyser is case-insensitive and convert all search data into lower case. So the best way to seach in MongoDb with Lucene Query is to use this code.</p><div class="language-scala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> luceneQuery</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LuceneQueryConverter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.parse(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(favoriteFruit:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apple</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AND age:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">25</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) OR name:*Cecile* AND -active:false AND 123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="read-more" tabindex="-1">Read More <a class="header-anchor" href="#read-more" aria-label="Permalink to &quot;Read More&quot;">​</a></h2><p><a href="https://www.lucenetutorial.com/lucene-query-syntax.html" target="_blank" rel="noreferrer">Lucene Cheatsheet</a></p>',14)])])}const u=e(n,[["render",r]]);export{k as __pageData,u as default};
